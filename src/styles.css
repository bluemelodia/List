/* Global styles. */

* {
  font-size: 1rem;
  font-family: "Raleway", sans-serif;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;

  overflow: hidden;

  /* Hide scrollbar for IE, Edge and Firefox */
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* Hide scrollbar for Chrome, Safari and Opera */
body::-webkit-scrollbar {
  display: none;
}

/**
* Reset user agent styles.
*/
h1,
p {
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 8px;
}

/**
* Button styles.
*/
button[class="tab-stop"],
button[type="button"] {
  background-color: transparent;
  border: none;
}

button[type="submit"],
button.cancel {
  height: 40px;
  margin: 16px 0;
}

button[type="submit"] {
  background-color: pink;
  border: 2px solid #dd2e44;
}

button.cancel {
  background-color: #f9eeee;
  border: 2px solid pink;
}

button[type="submit"]:active,
button[type="submit"]:focus,
button[type="submit"]:hover {
  background-color: #dd2e44;
  color: white;
}

button.cancel:active,
button.cancel:focus,
button.cancel:hover {
  background-color: pink;
}

/**
* Form-relevant styles.
*/
.form-actions button {
  width: 100%;
}

.form-actions button:not(:last-child) {
  margin-right: 10px;
}

fieldset {
  border: none;
  display: flex;
  flex-direction: column;

  padding: 0;
  margin: 0;
}

fieldset.form-actions {
  flex-direction: row;
}

input {
  background-color: #f9eeee;
  border: 2px solid pink;
  display: inline-block;
  flex: 1;
  font-size: inherit;
  margin: 0 0 8px 0;
  padding: 8px;
}

:focus,
:focus-visible,
input:focus-visible {
  border: 2px solid #dd2e44;
  outline-color: #dd2e44;
}

.input-error {
  color: #dd2e44;
  font-size: 0.9rem;
  margin: 0 0 8px 0;
}

/**
* General container styles.
*/
.full-viewport {
  width: 100vw;
  height: 100vh;
}

.full-screen {
  height: 100%;
  width: 100%;
}

.flex-centered__column {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

/* Form container styles. */
.form-container,
.no-results {
  margin: 16px;
}

@media only screen and (max-width: 500px) {
  .form-container,
  .no-results {
    margin: 8px;
  }
}

/**
* There’s a special case where the min-height of flex items defaults to the content
* size rather than zero. According to the spec, this should only apply when overflow
* is set to visible. For whatever reason, Firefox doesn’t implement it this way 
* (as of 52.0.1 on Mac), and apparently thinks Chrome has it wrong. So for now,
* we have to explicitly set the min height to zero, or else the content will overflow
* its parent even though we’ve set it to scroll. This step needs to be done for every
* flex-item parent all the way up to the outermost flex-box.
*
* Source: https://medium.com/@stephenbunch/how-to-make-a-scrollable-container-with-dynamic-height-using-flexbox-5914a26ae336
*/
.flex-container__dynamic-scroll {
  flex-grow: 1;
  min-height: 0;
}

/* Other common UI elements. */
.app-btn {
  border: none;
  background-color: transparent;
}

.arrow-btn {
  color: #dd2e44;
}

button:disabled .arrow-btn {
  color: #9e9e9e;
}

.badge {
  border-radius: 16px;
  color: white;
  padding: 4px 8px;
}

.badge.expired {
  background-color: #636e72;
}

.badge.info {
  background-color: #01866c;
}

.badge.warning {
  background-color: #a56b00;
}

.badge.priority {
  background-color: #e17055;
}

.badge.urgent {
  background-color: #d63031;
}

/* Hamburger menu. */
.menu-button {
  height: 100%;
  padding: 8px;
}

.menu-button img {
  height: 100%;
}

/**
* Animations
*/

@keyframes appear {
  from {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes expand {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
